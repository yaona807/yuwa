class Yuwa{#e(e){let t=null;if("function"==typeof e&&(t=e,e=e()),null==e)return null;if(!e.tagName)return console.error("tagName is required"),null;const r=document.createElement(e.tagName);return Object.entries(e).forEach((([e,t])=>{if(t)switch(e){case"tagName":break;case"classList":t.forEach((e=>r.classList.add(e)));break;case"style":Object.assign(r.style,t);break;case"on":case"componentEvent":Object.entries(t).forEach((([e,t])=>r.addEventListener(e,t)));break;case"children":t.forEach((e=>{if(!e)return;const t=this.#e(e);t&&r.appendChild(t)}));break;default:try{const n=Object.getOwnPropertyDescriptor(r,e);n?n.set&&n.set.call(r,t):r[e]=t}catch(t){console.warn(`Failed to set property "${e}":`,t)}}})),e.update=function(){const n=r.parentElement;if(n){if(t){const e=this.#e(t);e&&n.insertBefore(e,r)}else n.insertBefore(this.#e(e),r);r.remove()}else console.warn("Element has no parent, cannot update")},r}render(e){if(!Array.isArray(e))return void console.error("tagDataList must be an array");const t=document.querySelector("#root");t&&t.remove(),document.body.appendChild(this.#e({id:"root",tagName:"div",children:e}))}withProps(e,...t){return function(){return e(...t)}}emit(e,...t){if("string"!=typeof e)return void console.error("eventName must be a string");const r=document.querySelector("#root");r?Array.from(r.children).forEach((r=>{const n=[r];for(;n.length>0;){const r=n.shift();r._componentEvents&&"function"==typeof r._componentEvents[e]&&r._componentEvents[e](...t),n.push(...Array.from(r.children))}})):console.warn("Root element not found")}}export default new Yuwa;